# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
context:
  oot_name: rds
  name: gnuradio-rds
  # update script relies on `git_url` and `git_branch` and can replace:
  #   `git_rev`, `base_version`, `date_str`, `build`
  git_url: https://github.com/bastibl/gr-rds.git
  git_branch: maint-3.10
  git_rev: c1cba54dfac0661c088c44a120eeb38c300f6c01
  base_version: "3.10"
  date_str: "20250305"
  version: ${{ base_version }}.post${{ date_str }}+g${{ git_rev[:7] }}
  build: "1"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  git: ${{ git_url }}
  rev: ${{ git_rev }}

build:
  number: ${{ build }}
  files:
    exclude:
      - "**/gdk-pixbuf*"
      - "**/*.pyc"

requirements:
  build:
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - numpy
        - pybind11
    - ${{ compiler("c") }}
    - ${{ stdlib("c") }}
    - ${{ compiler("cxx") }}
    - cmake
    - git
    - ninja
    - pkg-config
  host:
    - gnuradio-core
    - libboost-devel
    - numpy
    - if: win
      then: pip
    - pybind11
    - python
  run:
    - numpy
    - pyqt
    - python

tests:
  - python:
      imports:
        - rds
      pip_check: false
  - package_contents:
      include:
        - rds/api.h
      lib:
        - gnuradio-rds
      files:
        # Example flowgraphs
        - ${{ "Library/" if win }}share/gnuradio/examples/rds/rds_rx.grc
        - ${{ "Library/" if win }}share/gnuradio/examples/rds/rds_tx.grc
        # GRC blocks
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/rds_decoder.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/rds_encoder.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/rds_panel.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/rds_parser.block.yml
  #- script:
      #- if: unix
        #then: |
          ## Put commands that test the package on Linux or macOS below
          ## Verify that example flowgraphs can be generated
          #grcc $PREFIX/share/gnuradio/examples/rds/rds_rx.grc
          #grcc $PREFIX/share/gnuradio/examples/rds/rds_tx.grc
      #- if: win
        #then: |
          #:: Put commands that test the package on Windows below
          #:: Verify that example flowgraphs can be generated
          #grcc %PREFIX%\\Library\\share\\gnuradio\\examples\\rds\\rds_rx.grc
          #grcc %PREFIX%\\Library\\share\\gnuradio\\examples\\rds\\rds_tx.grc
    #requirements:
      #run:
        #- gnuradio-grc
        #- gnuradio-osmosdr
        #- gnuradio-qtgui
        #- gnuradio-uhd
        #- python

about:
  homepage: https://github.com/bastibl/gr-rds
  license: GPL-3.0-or-later
  license_file: COPYING
  summary: GNU Radio module for an FM RDS/TMC Transceiver
  description: >
    A Radio Data System - Traffic Message Channel (RDS-TMC) module for GNU
    Radio. RDS is a communications protocol standard for embedding small
    amounts of digital information in conventional FM radio broadcasts.

    Example gnuradio-companion flowgraphs are installed with the package and
    can be found in:
        - (Linux/macOS) `$CONDA_PREFIX/share/gnuradio/examples/rds`
        - (Windows) `%CONDA_PREFIX%\share\gnuradio\examples\rds`

extra:
  recipe-maintainers:
    - ryanvolz
