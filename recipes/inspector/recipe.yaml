# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
context:
  oot_name: inspector
  name: gnuradio-inspector
  # update script relies on `git_url` and `git_branch` and can replace:
  #   `git_rev`, `base_version`, `date_str`, `build`
  git_url: https://github.com/gnuradio/gr-inspector.git
  git_branch: main
  git_rev: ad6a69e84eb847f30fe79ba657ba95ddcb211c0c
  base_version: "0.0.0"
  date_str: "20250303"
  version: ${{ base_version }}.${{ date_str }}.dev+g${{ git_rev[:7] }}
  build: "3"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  git: ${{ git_url }}
  rev: ${{ git_rev }}

build:
  number: ${{ build }}
  files:
    exclude:
      - "**/gdk-pixbuf*"
      - "**/*.pyc"

requirements:
  build:
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - numpy
        - pybind11
        - qt-main
    - ${{ compiler("c") }}
    - ${{ stdlib("c") }}
    - ${{ compiler("cxx") }}
    - cmake
    - git
    - ninja
    - pkg-config
  host:
    - fmt
    - gnuradio-core
    - gnuradio-qtgui
    - libboost-devel
    - if: linux
      then: libgl-devel
    - numpy
    - if: win
      then: pip
    - pybind11
    - pyqt
    - python
    - qt-main
    - qwt
    - spdlog
    - volk
  run:
    - gnuradio-qtgui
    - numpy
    - pyqt
    - python
  ignore_run_exports:
    from_package:
      # this only builds against the headers
      - libboost-devel
      - if: linux
        then: libgl-devel

tests:
  - python:
      imports:
        - gnuradio.inspector
      pip_check: false
  - package_contents:
      include:
        - gnuradio/inspector/api.h
      lib:
        - gnuradio-inspector
      files:
        # Example flowgraphs
        - ${{ "Library/" if win }}share/gnuradio/examples/inspector/ofdm_estimation.grc
        # GRC blocks
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/inspector_ofdm_synchronizer_cc.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/inspector_ofdm_zkf_c.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/inspector_qtgui_inspector_sink_vf.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/inspector_signal_detector_cvf.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/inspector_signal_extractor_c.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/inspector_signal_separator_c.block.yml
  #- script:
      #- if: unix
        #then: |
          ## Put commands that test the package on Linux or macOS below
          ## Verify that example flowgraphs can be generated
          #grcc $PREFIX/share/gnuradio/examples/inspector/ofdm_estimation.grc
      #- if: win
        #then: |
          #:: Put commands that test the package on Windows below
          #:: Verify that example flowgraphs can be generated
          #grcc %PREFIX%\\Library\\share\\gnuradio\\examples\\inspector\\ofdm_estimation.grc
    #requirements:
      #run:
        #- gnuradio-grc

about:
  homepage: https://github.com/gnuradio/gr-inspector
  license: GPL-3.0-or-later
  license_file: LICENSE
  summary: GNU Radio signal analysis toolbox
  description: >
    This GNU Radio module is developed to realize signal analysis abilities
    in typical block-structure. The module is capable of the following:

        Energy detection of continuous signals
        Filtering of detected signals
        OFDM parameter estimation (carrier spacing, symbol time)
        Blind OFDM synchronization
        Resampling of signals to constant rate

    Example gnuradio-companion flowgraphs are installed with the package and
    can be found in:
        - (Linux/macOS) `$CONDA_PREFIX/share/gnuradio/examples/inspector`
        - (Windows) `%CONDA_PREFIX%\share\gnuradio\examples\inspector`

extra:
  recipe-maintainers:
    - ryanvolz
