# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
context:
  oot_name: fosphor
  name: gnuradio-${{ oot_name }}
  # update script relies on `git_url` and `git_branch` and can replace:
  #   `git_rev`, `base_version`, `date_str`, `build`
  git_url: https://github.com/radioconda/gr-fosphor.git
  git_branch: updates
  git_rev: 6965665736d3265941741f1550d97358a04e8b1f
  base_version: "0.0.0"
  date_str: "20250304"
  version: ${{ base_version }}.${{ date_str }}.dev+g${{ git_rev[:7] }}
  build: "0"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  git: ${{ git_url }}
  rev: ${{ git_rev }}

build:
  number: ${{ build }}
  files:
    exclude:
      - "**/gdk-pixbuf*"
      - "**/*.pyc"

requirements:
  build:
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - numpy
        - pybind11
    - ${{ compiler("c") }}
    - ${{ stdlib("c") }}
    - ${{ compiler("cxx") }}
    - cmake
    - git
    - ninja
    - pkg-config
  host:
    - fmt
    - freetype
    - if: win
      then: glew
    - glfw
    - gnuradio-core
    - if: win
      then: khronos-opencl-icd-loader
    - libboost-devel
    - if: linux
      then: libgl-devel
    - libpng
    - numpy
    - if: linux
      then: ocl-icd
    - if: win
      then: pip
    - pybind11
    - python
    - qt-main
    - spdlog
  run:
    - numpy
    - if: linux
      then: ocl-icd-system
    - python

tests:
  - python:
      imports:
        - gnuradio.${{ oot_name }}
      pip_check: false
  - package_contents:
      include:
        - gnuradio/${{ oot_name }}/api.h
      lib:
        - ${{ name }}
      files:
        # GRC blocks
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/${{ oot_name }}_glfw_sink_c.block.yml
        - ${{ "Library/" if win }}share/gnuradio/grc/blocks/${{ oot_name }}_qt_sink_c.block.yml

about:
  homepage: https://osmocom.org/projects/sdr/wiki/Fosphor
  license: GPL-3.0-or-later
  license_file: COPYING
  summary: GNU Radio block for spectrum visualization using GPU
  description: >
    GNU Radio block for RTSA-like spectrum visualization using OpenCL and
    OpenGL acceleration.

    Note: this package does not depend on a specific OpenCL implementation
    and will use an implementation available on your system (not installed
    through conda) by default. If you would like to use a particular OpenCL
    implementation, you can install one of the available conda packages::

        - pocl (LLVM-based with many device targets)
        - intel-compute-runtime (Intel Graphics)
        - beignet (legacy Intel Graphics)
        - oclgrind (virtual OpenCL device simulator)

extra:
  recipe-maintainers:
    - ryanvolz
